@model Product_MVC.Models.InventoryCreateViewModel
@using Product_MVC.Extensions
@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>InventoryData</h4>
<hr />
<div class="row">
    <div class="col-md-4">
         @Html.HiddenFor(model=>model.Products)
         @Html.HiddenFor(model=>model.InventoryData)
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
               <br />
            <div class="form-group row">
                <div class="col-2">
                    <label asp-for="InventoryData.ProductId"></label>
                </div>
                <div class="col-4">
                    <select asp-for="InventoryData.ProductId" asp-items="IEnumerableExtensions.ProductItem(Model.Products)" id="ProductData" class="form-control"></select>
                    <span asp-validation-for="InventoryData.ProductId" class="text-danger"></span>
                    </div>
                </div>
    <br />
            <div class="form-group">
                <label asp-for="InventoryData.stock_product_quantity" class="control-label"></label>
                <input asp-for="InventoryData.stock_product_quantity" class="form-control" />
                <span asp-validation-for="InventoryData.stock_product_quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
